gGeoCode("Wageningen, GL")
library(RCurl)
install.packages(c("RCurl", "RJSONIO"))
library(RCurl)
library(RJSONIO)
Source(GeocodeLocater)
source(GeocodeLocater)
source("R/GeocodeLocater.R")
gGeoCode("Wageningen, GL")
gGeoCode("Ede, GL")
wageningengeocode <- gGeoCode("Wageningen, GL")
edegeocode <- gGeoCode("Ede, GL")
wageningengeocode$lat
wageningengeocode
wageningengeocode@data
wageningengeocode$lat
wageningengeocode$x
wageningengeocode(1)
wageningengeocode[1]
wageningengeocode[2]
wageningengeocode <- gGeoCode("Wageningen")
wageningengeocode[1]
wageningengeocode <- gGeoCode()
source("R/GeocodeLocater.R")
construct.geocode.url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
uscript <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(uscript))
}
gGeoCode <- function(address,verbose=FALSE) {
if address == NA
address <- "Wageningen"
if(verbose) cat(address,"\n")
u <- construct.geocode.url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
return(c(lat, lng))
} else {
return(c(NA,NA))
}
}
construct.geocode.url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
uscript <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(uscript))
}
gGeoCode <- function(address,verbose=FALSE) {
if address == NA {
address <- "Wageningen" }
if(verbose) cat(address,"\n")
u <- construct.geocode.url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
return(c(lat, lng))
} else {
return(c(NA,NA))
}
}
construct.geocode.url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
uscript <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(uscript))
}
gGeoCode <- function(address,verbose=FALSE) {
if (address == NA) {
address <- "Wageningen" }
if(verbose) cat(address,"\n")
u <- construct.geocode.url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
return(c(lat, lng))
} else {
return(c(NA,NA))
}
}
source("R/GeocodeLocater.R")
source("R/GeocodeLocater.R")
wageningengeocode <- gGeoCode("Wageningen, GL")
wageningengeocode <- gGeoCode()
construct.geocode.url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
uscript <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(uscript))
}
gGeoCode <- function(address = NULL,verbose=FALSE) {
if (is.null(address)) {
address <- "Wageningen" }
if(verbose) cat(address,"\n")
u <- construct.geocode.url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
return(c(lat, lng))
} else {
return(c(NA,NA))
}
}
source("R/GeocodeLocater.R")
wageningengeocode <- gGeoCode("Wageningen, GL")
latwageningen <- wageningengeocode[1]
latwageningen
wageningengeocode <- gGeoCode()
wageningengeocode
a <- 22
a
str(a)
type(a)
food
"food"
# Team: ZeaPol
# Team Members: Roeland de Koning / Barbara Sienkiewicz
# Date: 26/01/2015
# Final_Project
get.places.API <- function(lat, lon, radius, searchtypes =NULL, searchnames = NULL, filetype, key) {
if(is.null(searchnames)) {
searchnames <- ""
}
if(is.null(searchtypes)) {
searchtypes <- ""
}
rootscript <- "https://maps.googleapis.com/maps/api/place/nearbysearch/"
geocodeandfilescript <- filetype + "?location=" + lat /, + lon +"$radius=" + radius
typesearchscript <- "&types=" + searchtypes
namesearchscript <- "&names=" + searchnames
keyscript <- "&key=" + key
url <- rootscript + geocodeandfilescript + typesearchscript +namesearchscript + keyscript
}
get.places.API <- function(lat, lon, radius, searchtypes =NULL, searchnames = NULL, filetype, key) {
if(is.null(searchnames)) {
searchnames <- ""
}
if(is.null(searchtypes)) {
searchtypes <- ""
}
rootscript <- "https://maps.googleapis.com/maps/api/place/nearbysearch/"
geocodeandfilescript <- filetype + "?location=" + lat \, + lon +"$radius=" + radius
typesearchscript <- "&types=" + searchtypes
namesearchscript <- "&names=" + searchnames
keyscript <- "&key=" + key
url <- rootscript + geocodeandfilescript + typesearchscript +namesearchscript + keyscript
}
get.places.API <- function(lat, lon, radius, searchtypes =NULL, searchnames = NULL, filetype, key) {
if(is.null(searchtypes)) {
searchtypes <- " "
}
if(is.null(searchnames)) {
searchnames <- " "
}
rootscript <- "https://maps.googleapis.com/maps/api/place/nearbysearch/"
geocodeandfilescript <- filetype + "?location=" + lat \, + lon +"$radius=" + radius
typesearchscript <- "&types=" + searchtypes
namesearchscript <- "&names=" + searchnames
keyscript <- "&key=" + key
url <- rootscript + geocodeandfilescript + typesearchscript +namesearchscript + keyscript
}
get.places.API <- function(lat, lon, radius, searchtypes =NULL, searchnames = NULL, filetype, key) {
if(is.null(searchtypes)) {
searchtypes <- ""
}
if(is.null(searchnames)) {
searchnames <- ""
}
rootscript <- "https://maps.googleapis.com/maps/api/place/nearbysearch/"
geocodeandfilescript <- paste(filetype,"?location=",lat,",",lon,"$radius=",radius)
typesearchscript <- paste("&types=",searchtypes)
namesearchscript <- paste("&names=",searchnames)
keyscript <- paste("&key=",key)
url <- paste(rootscript,geocodeandfilescript,typesearchscript,namesearchscript,keyscript)
}
